<UserControl x:Class="ChainbotStudio.Views.OutputView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="http://www.galasoft.ch/mvvmlight"
             xmlns:controls="clr-namespace:HighlightableTextBlock;assembly=HighlightableTextBlock"
             xmlns:local="clr-namespace:ChainbotStudio.Views"
             xmlns:lclz="clr-namespace:Chainbot.Resources.Properties;assembly=Chainbot.Resources"
             xmlns:ui="clr-namespace:ChainbotStudio.UI"
             xmlns:pu="clr-namespace:Panuon.UI.Silver;assembly=Panuon.UI.Silver"
             mc:Ignorable="d" 
             DataContext="{Binding Output, Source={StaticResource Locator}}"
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
       
        <Style x:Key="TextBlockInfoStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" >
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin" Value="2,0,2,0" />
            <Setter Property="Foreground" Value="{DynamicResource Output.FilterButton.Foreground}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        
        <Style x:Key="TextBlockCountStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" >
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin" Value="2,0,5,0" />
            <Setter Property="Foreground" Value="{DynamicResource Output.FilterButton.Foreground}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        
        <Style x:Key="TextBlockLogStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsError}" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource Log.Error.Foreground}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsWarning}" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource Log.Warning.Foreground}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsInformation}" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource Log.Information.Foreground}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsTrace}" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource Log.Trace.Foreground}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Command="{Binding CopyItemMsgCommand}" Key="C" Modifiers="Ctrl" />
    </UserControl.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Background="{DynamicResource OutputView.Title.Background}" Grid.Row="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" >
                <Grid Margin="10,0,0,0">
                    <StackPanel Orientation="Horizontal">
                        <Border Height="25" ToolTip="{x:Static lclz:Resources.OutPutView_ShowTimeToolTip}" >
                            <Grid>
                                <Border CornerRadius="5" Background="{DynamicResource Output.FilterButton.Background}" Visibility="{Binding IsShowTimestamps,Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}" />
                                <Button Padding="5,0" Command="{Binding ShowTimestampsCommand}" Background="Transparent" pu:ButtonHelper.HoverBrush="{StaticResource Output.FilterButton.HoverBrush}">
                                    <Image Source="{StaticResource ShowTimeDrawingImage}" Width="20" Height="20" />
                                </Button>
                            </Grid>
                        </Border>

                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Background="{DynamicResource Separator.Background}" Margin="15,10,15,10" />

                        <Border Height="25" ToolTip="{x:Static lclz:Resources.OutPutView_ErrToolTip}" Margin="5,0,0,0">
                            <Grid>
                                <Border CornerRadius="5" Background="{DynamicResource Output.FilterButton.Background}" Visibility="{Binding IsShowError,Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}" />
                                <Button Padding="5,0"  Command="{Binding ShowErrorCommand}" Background="Transparent" pu:ButtonHelper.HoverBrush="{StaticResource Output.FilterButton.HoverBrush}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{StaticResource ErrorDrawingImage}" Width="18" Height="18" />
                                        <TextBlock Text="{x:Static lclz:Resources.OutPutView_ErrLabel}" Style="{StaticResource TextBlockInfoStyle}" />
                                        <TextBlock Text="{Binding ErrorCount}" Style="{StaticResource TextBlockCountStyle}" />
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </Border>
                        <Border Height="25" ToolTip="{x:Static lclz:Resources.OutPutView_WarnToolTip}" Margin="5,0,0,0">
                            <Grid>
                                <Border CornerRadius="5"  Background="{DynamicResource Output.FilterButton.Background}" Visibility="{Binding IsShowWarning,Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}" />
                                <Button Padding="5,0" Command="{Binding ShowWarningCommand}" Background="Transparent" pu:ButtonHelper.HoverBrush="{StaticResource Output.FilterButton.HoverBrush}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{StaticResource WarningDrawingImage}" Width="18" Height="18" />
                                        <TextBlock Text="{x:Static lclz:Resources.OutPutView_WarnLabel}" Style="{StaticResource TextBlockInfoStyle}" />
                                        <TextBlock Text="{Binding WarningCount}" Style="{StaticResource TextBlockCountStyle}" />
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </Border>
                        <Border Height="25" ToolTip="{x:Static lclz:Resources.OutPutView_InfoToolTip}" Margin="5,0,0,0">
                            <Grid>
                                <Border CornerRadius="5"  Background="{DynamicResource Output.FilterButton.Background}" Visibility="{Binding IsShowInformation,Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}" />
                                <Button Padding="5,0" Command="{Binding ShowInformationCommand}" Background="Transparent" pu:ButtonHelper.HoverBrush="{StaticResource Output.FilterButton.HoverBrush}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{StaticResource InfoDrawingImage}" Width="18" Height="18" />
                                        <TextBlock Text="{x:Static lclz:Resources.OutPutView_InfoLabel}" Style="{StaticResource TextBlockInfoStyle}" />
                                        <TextBlock Text="{Binding InformationCount}" Style="{StaticResource TextBlockCountStyle}" />
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </Border>
                        <Border Height="25" ToolTip="{x:Static lclz:Resources.OutPutView_TraceToolTip}" Margin="5,0,0,0">
                            <Grid>
                                <Border CornerRadius="5" Background="{DynamicResource Output.FilterButton.Background}" Visibility="{Binding IsShowTrace,Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}" />
                                <Button Padding="5,0" Command="{Binding ShowTraceCommand}" Background="Transparent" pu:ButtonHelper.HoverBrush="{StaticResource Output.FilterButton.HoverBrush}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{StaticResource TraceDrawingImage}" Width="18" Height="18" />
                                        <TextBlock Text="{x:Static lclz:Resources.OutPutView_TraceLabel}" Style="{StaticResource TextBlockInfoStyle}" />
                                        <TextBlock Text="{Binding TraceCount}" Style="{StaticResource TextBlockCountStyle}" />
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </Border>

                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Background="{DynamicResource Separator.Background}" Margin="15,10,15,10" />

                        <Button Command="{Binding ClearAllCommand}" ToolTip="{x:Static lclz:Resources.OutPutView_ClearToolTip}" Background="Transparent" Padding="5,0" Height="25" pu:ButtonHelper.HoverBrush="{StaticResource Output.FilterButton.HoverBrush}" >
                            <Image Source="{StaticResource RemoveAllLogsDrawingImage}" Width="20" Height="20" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Background="{DynamicResource Separator.Background}" Margin="15,10,15,10" />
            </StackPanel>

            <Grid Height="25" Grid.Column="1" Margin="10,0,5,0">
                <TextBox Background="{DynamicResource WindowX.View.Output.SearchTextBox.Background}" Style="{StaticResource TextBoxSearchStyle}" Text="{Binding SearchText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
            
        </Grid>
        <Grid Margin="5,5,5,5" Grid.Row="1" Background="{StaticResource View.Background}">
            <Grid Visibility="{Binding IsSearchResultEmpty,Mode=OneWay, Converter={StaticResource BoolNotVisibilityConverter}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="38"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" Background="{DynamicResource Output.ListBox.Left.Background}"></Grid>
                    <Grid Grid.Column="1" Background="{DynamicResource Output.ListBox.Right.Background}"></Grid>
                </Grid>
                <ListBox ui:ListBoxBehavior.ScrollOnNewItem="True" Background="{DynamicResource Output.ListBox.Background}" ItemsSource="{Binding OutputItems}" ScrollViewer.HorizontalScrollBarVisibility="Hidden" SelectionMode="Single" BorderBrush="{DynamicResource Output.ListBox.BorderBrush}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <cmd:EventToCommand Command="{Binding ListBoxLoadedCommand}" PassEventArgsToCommand="True" ></cmd:EventToCommand>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="FontSize" Value="13"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Visibility" Value="{Binding IsVisible,Mode=OneWay, Converter={StaticResource BoolCollapsedConverter}}"/>

                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSearching}" Value="True" />
                                        <Condition Binding="{Binding IsMatch}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility"  Value="Collapsed"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <ContentControl>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseRightButtonUp">
                                        <cmd:EventToCommand Command="{Binding MouseRightButtonUpCommand}" PassEventArgsToCommand="True" ></cmd:EventToCommand>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <cmd:EventToCommand Command="{Binding MouseDoubleClickCommand}" PassEventArgsToCommand="True" ></cmd:EventToCommand>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid Background="Transparent" ToolTip="{Binding ToolTip}" ToolTipService.InitialShowDelay="500">
                                    <StackPanel Orientation="Horizontal" Height="20">
                                        <Grid Margin="12,0,13,0" Width="18" Height="18">
                                            <Image>
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsError}" Value="True">
                                                                <Setter Property="Source" Value="{StaticResource ErrorDrawingImage}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsWarning}" Value="True">
                                                                <Setter Property="Source" Value="{StaticResource WarningDrawingImage}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsInformation}" Value="True">
                                                                <Setter Property="Source" Value="{StaticResource InfoDrawingImage}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsTrace}" Value="True">
                                                                <Setter Property="Source" Value="{StaticResource TraceDrawingImage}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Grid>
                                        <Grid Visibility="{Binding IsShowTimestamps,Mode=OneWay, Converter={StaticResource BoolCollapsedConverter}}" Margin="5,0">
                                            <TextBlock Style="{StaticResource TextBlockLogStyle}" Text="{Binding Timestamps}" VerticalAlignment="Center" />
                                        </Grid>
                                        <TextBlock Margin="5,0" Style="{StaticResource TextBlockLogStyle}" IsHitTestVisible="False"  controls:HighlightableTextBlock.HightlightText="{Binding SearchText}" 
                                                   controls:HighlightableTextBlock.HighlightBrush="Transparent" 
                                                   controls:HighlightableTextBlock.HighlightTextBrush="{DynamicResource SearchResult.HighlightTextBrush}" 
                                                   Text="{Binding Msg,Converter={StaticResource SingleLineTextConverter}}" VerticalAlignment="Center" />
                                        <Image Width="12" Height="12" Source="pack://application:,,,/Chainbot.Resources;Component/Image/Output/jump.png" ToolTip="{x:Static lclz:Resources.OutPutView_DoubleClickToolTip}" Visibility="{Binding IsCanJump,Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}" />
                                    </StackPanel>
                                </Grid>
                            </ContentControl>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <Grid Visibility="{Binding IsSearchResultEmpty,Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}">
                <TextBlock FontSize="14" Margin="0,30,0,0" HorizontalAlignment="Center" Foreground="{DynamicResource SearchResult.Empty.Foreground}" Text="{x:Static lclz:Resources.Text_SearchEmpty}" />
            </Grid>
        </Grid>
    </Grid>
</UserControl>
