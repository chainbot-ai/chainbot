<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutProducts" xml:space="preserve">
    <value>About Products</value>
  </data>
  <data name="AboutText" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ActivityLog" xml:space="preserve">
    <value>Activity log: type = {0}, msg = {1}, msgDetails = {2}</value>
  </data>
  <data name="AreYouSureToRemoveThePackage" xml:space="preserve">
    <value>Are you sure you want to remove the current package?</value>
  </data>
  <data name="AreYouSureToReset" xml:space="preserve">
    <value>Are you sure you want to reset to default settings?</value>
  </data>
  <data name="AuthorizationTestFailed" xml:space="preserve">
    <value>The software failed the authorization test, please register the product!</value>
  </data>
  <data name="AutomaticallyOpenWindowContent" xml:space="preserve">
    <value>Automatically open the main window after startup</value>
  </data>
  <data name="AutomaticallyStartAtBootContent" xml:space="preserve">
    <value>Automatically start at boot</value>
  </data>
  <data name="AvailableProcessesListText" xml:space="preserve">
    <value>List of available processes</value>
  </data>
  <data name="BrowseLogsToolTip" xml:space="preserve">
    <value>View logs</value>
  </data>
  <data name="BrowserExtensionsToolTip" xml:space="preserve">
    <value>Browser Extensions</value>
  </data>
  <data name="BrowserWindowTitle" xml:space="preserve">
    <value>Browser Extensions</value>
  </data>
  <data name="BrowseVideos" xml:space="preserve">
    <value>Browse videos</value>
  </data>
  <data name="CancelContent" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CannotFindChainbotExecutor" xml:space="preserve">
    <value>Chainbot Executor does not exist! Please check whether it is deleted by antivirus software by mistake</value>
  </data>
  <data name="CannotFindMainXamlFileError" xml:space="preserve">
    <value>Master file not found!</value>
  </data>
  <data name="CannotFindProjectJsonFile" xml:space="preserve">
    <value>Unable to find project configuration file project.json.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ChainbotRobotSettings" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Config\ChainbotRobotSettings.xml;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="ChainbotRobotTitle" xml:space="preserve">
    <value>Chainbot Robot</value>
  </data>
  <data name="CloseContent" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ComputerId" xml:space="preserve">
    <value>Machine Id:</value>
  </data>
  <data name="ComputerName" xml:space="preserve">
    <value>Computer Name:</value>
  </data>
  <data name="ConfirmText" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ControlCenterAddress" xml:space="preserve">
    <value>Control Center:</value>
  </data>
  <data name="ControlCenterConfiguration" xml:space="preserve">
    <value>Control Center Configuration</value>
  </data>
  <data name="CopyInformation" xml:space="preserve">
    <value>Copy information</value>
  </data>
  <data name="EnableControlCenter" xml:space="preserve">
    <value>Enable Control Center</value>
  </data>
  <data name="EnableScreenRecording" xml:space="preserve">
    <value>Enable screen recording</value>
  </data>
  <data name="EndProcessRun" xml:space="preserve">
    <value>End of process run</value>
  </data>
  <data name="EndScreenRecording" xml:space="preserve">
    <value>Screen recording ends</value>
  </data>
  <data name="ExportMachineCodeContent" xml:space="preserve">
    <value>Export the machine code file</value>
  </data>
  <data name="ExportMachineCodeToolTip" xml:space="preserve">
    <value>Please export the machine code file and send it to the authorized party to complete the authorization</value>
  </data>
  <data name="FramesText" xml:space="preserve">
    <value>Frames:</value>
  </data>
  <data name="ImportMachineCodeContent" xml:space="preserve">
    <value>Import authorization code file</value>
  </data>
  <data name="ImportMachineCodeToolTip" xml:space="preserve">
    <value>Select the authorization code file to complete the import, or directly drag the authorization code file to the current window</value>
  </data>
  <data name="IPAddress" xml:space="preserve">
    <value>IP Address:</value>
  </data>
  <data name="LoadingProjectDependencies" xml:space="preserve">
    <value>Loading project dependencies</value>
  </data>
  <data name="LoadingProjectDependenciesError" xml:space="preserve">
    <value>Error loading project dependencies!</value>
  </data>
  <data name="LocateCurrentPackage" xml:space="preserve">
    <value>Locate the current package</value>
  </data>
  <data name="NotRegisteredText" xml:space="preserve">
    <value>Program is not registered</value>
  </data>
  <data name="OKContent" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PackageToolTip" xml:space="preserve">
    <value>Name: {0}\r\nVersion: {1}\r\nRelease Notes: {2}\r\nProject Description: {3}\r\nRelease Time: {4}</value>
  </data>
  <data name="PermanentText" xml:space="preserve">
    <value>Permanent</value>
  </data>
  <data name="ProcessStart" xml:space="preserve">
    <value>Process start</value>
  </data>
  <data name="ProjectStartError" xml:space="preserve">
    <value>An exception occurred during the process running!</value>
  </data>
  <data name="PromptText" xml:space="preserve">
    <value>Prompt</value>
  </data>
  <data name="QualityText" xml:space="preserve">
    <value>Quality:</value>
  </data>
  <data name="RecordingLimitDays" xml:space="preserve">
    <value>Retention days:</value>
  </data>
  <data name="RecordingSettings" xml:space="preserve">
    <value>Recording settings</value>
  </data>
  <data name="RefreshToolTip" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="RegisteredText" xml:space="preserve">
    <value>Program is registered</value>
  </data>
  <data name="RegisterYourProduct" xml:space="preserve">
    <value>Register your product</value>
  </data>
  <data name="RegistrationInformationHeader" xml:space="preserve">
    <value>Registration Information</value>
  </data>
  <data name="RemoveCurrentPackage" xml:space="preserve">
    <value>Remove the current package</value>
  </data>
  <data name="ResetSettingsContent" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="RunningText" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="ScreenRecordingStarted" xml:space="preserve">
    <value>The screen recording begins ...</value>
  </data>
  <data name="SearchHintText" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchResultEmptyText" xml:space="preserve">
    <value>Search results are empty</value>
  </data>
  <data name="StartText" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StatusText" xml:space="preserve">
    <value>Status :</value>
  </data>
  <data name="StopText" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="SystemSettingsHeader" xml:space="preserve">
    <value>System settings</value>
  </data>
  <data name="TheProcessStarted" xml:space="preserve">
    <value>The process starts ...</value>
  </data>
  <data name="TillText" xml:space="preserve">
    <value>till</value>
  </data>
  <data name="UpdateText" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UserSettings" xml:space="preserve">
    <value>User settings</value>
  </data>
  <data name="ValidityPeriodText" xml:space="preserve">
    <value>Validity period:</value>
  </data>
  <data name="VersionText" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="WorkflowAlreadyRunning" xml:space="preserve">
    <value>A workflow is already running, please wait for it to finish before running!</value>
  </data>
  <data name="YYYYMMDD" xml:space="preserve">
    <value>yyyyMMddHHmmss</value>
  </data>
</root>